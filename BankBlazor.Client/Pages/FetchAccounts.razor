@page "/fetch-accounts"
@inject HttpClient Http

<h3>Account Profile</h3>

<select @onchange="OnSelect">
    <option value="">Choose account</option>
    @foreach (var acc in accounts)
    {
        <option value="@acc.AccountId">@($"{acc.AccountId} – {acc.Balance} kr")</option>
    }
</select>

@if (selectedTx != null)
{
    <h4>Transactions</h4>
    <ul>
        @foreach (var tx in selectedTx)
        {
            <li>@($"{tx.TransactionDate:g}: {tx.Type} {tx.Amount} kr")</li>
        }
    </ul>
}

@code {
    private AccountDto[] accounts;
    private TransactionDto[] selectedTx;

    protected override async Task OnInitializedAsync()
        => accounts = await Http.GetFromJsonAsync<AccountDto[]>("api/accounts");

    private async Task OnSelect(ChangeEventArgs e)
    {
        var id = e.Value?.ToString();
        if (!string.IsNullOrEmpty(id))
        {
            selectedTx = await Http.GetFromJsonAsync<TransactionDto[]>($"api/accounts/{id}/transactions");
        }
    }

    class AccountDto { public int AccountId { get; set; } public decimal Balance { get; set; } }
    class TransactionDto { public int TransactionId { get; set; } public DateTime TransactionDate { get; set; } public string Type { get; set; } public decimal Amount { get; set; } }
}
